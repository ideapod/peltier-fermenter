//TODO build the report temp function into the heating cooling idle subroutines
//TODO add an integer of time
//TODO remove unessesary off's
//TODO investigate micros()

#include <OneWire.h>                        //http://www.pjrc.com/teensy/td_libs_OneWire.html
#include <DallasTemperature.h>              //https://github.com/milesburton/Arduino-Temperature-Control-Library/blob/master/DallasTemperature.h

float TmpC;                                 //open variable for Current Temperature
float TmpTH = 25;                           //set variable for target temperature - high range
float TmpTL = 23;                           //set variable for target temperature - low range

int cool = 13;                              //define pin 13 - represents cooling circuit Relay, MOSFET 1
int heat = 12;                              //define pin 12 - represents heating circuit Relay, MOSFET 2
int fan1 = 11;                              //define pin 11 - represents external fan,          MOSFET 3
int fan2 = 10;                              //define pin 10 - represents internal fan,          MOSFET 2 

#define ONE_WIRE_BUS 2                      //ds18820 to pin2
OneWire oneWire(ONE_WIRE_BUS);              //start onewire instance for device communication
DallasTemperature sensors(&oneWire);        //send onewire reference to dallas temp library

void setup()
{
  Serial.begin(38400);                      //init output to serial monitor
  sensors.begin();                          //startup onewire library
  pinMode (cool, OUTPUT);                   //sets the led pin 13 up as an output to cooling circuit
  pinMode (heat, OUTPUT);                   //sets the led pin 12 up as an output to heating circuit
  pinMode (fan1, OUTPUT);                   //sets the led pin 11 up as an output to external fan
  pinMode (fan2, OUTPUT);                   //sets the led pin 10 up as an output to internal fan
}

void loop()
{
  readtemp();                               //read temp from DS18820
  reporttemp();                             //report temperature to serial monitor
  cooling();                                //check targetTemp and turn on cooling circuit
  heating();                                //check targetTemp and turn on heating circuit
  idle();                                   //check targetTemp is within range and turn off heat and cool pins
}

void readtemp()
{
  sensors.requestTemperatures();            //call for temperature
  TmpC = (sensors.getTempCByIndex(0));      //set var TmpC to sensor reading in Celsius
}

void reporttemp()
{
  Serial.print("Temp: ");                    //Send temp to serial monitor on PC
  Serial.print(TmpC);
  Serial.println("C");
}

void cooling()
{
  if (TmpC > TmpTH)
  {
    digitalWrite (heat, LOW);               //ensure heating circuit is off
    delay(500);
    digitalWrite (cool, HIGH);              //turns on cooling circuit
    digitalWrite (fan1, HIGH);              //turns on external fan
    digitalWrite (fan2, HIGH);              //turns on internal fan
    Serial.print("COOLING ");
    delay(1000);
  }
}

void heating()
{
  if (TmpC < TmpTL)
  {
    digitalWrite (cool, LOW);               //ensure cooling circuit is off
    delay(500);
    digitalWrite (heat, HIGH);              //turns on heating circuit
    digitalWrite (fan1, HIGH);              //turns on external fan
    digitalWrite (fan2, HIGH);              //turns on internal fan
    Serial.print("HEATING ");
    delay(1000);
  }
}

void idle()
{
  if (TmpC > TmpTL && TmpC < TmpTH)
  {
    digitalWrite (cool, LOW);               //turns off cooling circuit
    digitalWrite (heat, LOW);               //turns off heating circuit
    digitalWrite (fan1, LOW);               //turns off external fan
    digitalWrite (fan2, LOW);               //turns off internal fan
    Serial.print("IDLE ");
    delay(1000);
  }
}
